[/
Copyright 2013 Paul A. Bristow.
Copyright 2013 John Maddock.
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE_1_0.txt or copy at
http://www.boost.org/LICENSE_1_0.txt).
]

[section:version_32 32-bit version information used for tables below.]
[pre

Program: I:\boost-sandbox\multiprecision.cpp_bin_float\libs\multiprecision\doc\numeric_limits_qbk.cpp
Sat Aug 24 18:07:37 2013
BuildInfo:
  Platform Win32
  Compiler Microsoft Visual C++ version 10.0
  MSVC version 160040219.
  STL Dinkumware standard library version 520
  Boost version 1.55.0
]
[endsect] [/section:version_32]

[section:limits32 Numeric limits for 32-bit platform]
[table:integral_constants Integer types constants (`std::numeric_limits<T>::is_integer == true` && is_exact == true)
[[type][signed][bound][modulo][round][radix][digits][digits10]]
[[bool][unsigned][bound][no][to zero][2][1][0]]
[[char][signed][bound][modulo][to zero][2][7][2]]
[[char16_t][unsigned][bound][modulo][to zero][2][16][4]]
[[char32_t][unsigned][bound][modulo][to zero][2][32][9]]
[[unsigned char][unsigned][bound][modulo][to zero][2][8][2]]
[[short][signed][bound][modulo][to zero][2][15][4]]
[[unsigned short][unsigned][bound][modulo][to zero][2][16][4]]
[[int][signed][bound][modulo][to zero][2][31][9]]
[[unsigned][unsigned][bound][modulo][to zero][2][32][9]]
[[long][signed][bound][modulo][to zero][2][31][9]]
[[unsigned long][unsigned][bound][modulo][to zero][2][32][9]]
[[long long][signed][bound][modulo][to zero][2][63][18]]
[[unsigned long long][unsigned][bound][modulo][to zero][2][64][19]]
[[int32_t][signed][bound][modulo][to zero][2][31][9]]
[[uint32_t][unsigned][bound][modulo][to zero][2][32][9]]
[[int64_t][signed][bound][modulo][to zero][2][63][18]]
[[uint64_t][unsigned][bound][modulo][to zero][2][64][19]]
[[int128_t][signed][bound][modulo][to zero][2][128][38]]
[[uint128_t][unsigned][bound][modulo][to zero][2][128][38]]
[[int256_t][signed][bound][modulo][to zero][2][256][77]]
[[uint256_t][unsigned][bound][modulo][to zero][2][256][77]]
[[cpp_int][signed][unbounded][no][to zero][2][2147483647][646392383]]
]

[table:integral_functions Integer types functions (`std::numeric_limits<T>::is_integer == true`)
[[function][bool][char][unsigned char][char16_t][char32_t][short][unsigned short][int][unsigned int][long][unsigned long][long long][unsigned long long][int32_t][int64_t][int128_t]]
[[max][1][127][255][65535][-1][32767][65535][2147483647][4294967295][2147483647][4294967295][9223372036854775807][18446744073709551615][2147483647][9223372036854775807][340282366920938463463374607431768211455]]
[[min][0][-128][0][0][0][-32768][0][-2147483648][0][-2147483648][0][-9223372036854775808][0][-2147483648][-9223372036854775808][-340282366920938463463374607431768211455]]
]
[table:float_functions Floating-point types constants (`std::numeric_limits<T>::is_integer == false && std::numeric_limits<T>::is_modulo == false` )
[[type][signed][exact][bound][round][radix][digits][digits10][max_digits10][min_exp][min_exp10][max_exp][max_exp10][tiny][trap][]]
[[float][signed][inexact][bound][to nearest][2][24][6][8][-125][-37][128][38][tiny][traps]]

[[double][signed][inexact][bound][to nearest][2][53][15][17][-1021][-307][1024][308][tiny][traps]]

[[long double][signed][inexact][bound][to nearest][2][53][15][17][-1021][-307][1024][308][tiny][traps]]

[[cpp_dec_float_50][signed][inexact][bound][indeterminate][10][50][50][80][-222953000][-67108864][222953000][67108864][no][no]]

[[bin_128bit_double_type][signed][inexact][bound][to nearest][2][113][34][36][-2147483422][-646392383][2147483421][646392383][no][traps]]
]
[table:float_functions Floating-point types functions (`std::numeric_limits<T>::is_integer == false`)
[[function][float][double][long double][cpp_dec_50][cpp_bin_128]][[max][3.40282e+038][1.79769e+308][1.79769e+308][1e+67108865][1.63355e+646456925]]
[[min][1.17549e-038][2.22507e-308][2.22507e-308][1e-67108864][6.12165e-646456926]]
[[epsilon][1.19209e-007][2.22045e-016][2.22045e-016][1e-49][1.92593e-34]]
[[round_error][0.5][0.5][0.5][0.5][0.5]]
[[infinity][1.#INF][1.#INF][1.#INF][inf][inf]]
[[quiet_NaN][1.#QNAN][1.#QNAN][1.#QNAN][nan][nan]]
[[signaling_NaN][1.#QNAN][1.#QNAN][1.#QNAN][0][0]]
[[denorm_min][1.4013e-045][4.94066e-324][4.94066e-324][0][0]]
]


[endsect] [/section:limits32  Numeric limits for 32-bit platform]

